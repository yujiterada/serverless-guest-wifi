{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda Function resource stack creation using Amplify CLI",
  "Parameters": {
    "CloudWatchRule": {
      "Type": "String",
      "Default": "NONE",
      "Description": " Schedule Expression"
    },
    "deploymentBucketName": {
      "Type": "String"
    },
    "env": {
      "Type": "String"
    },
    "s3Key": {
      "Type": "String"
    },
    "webexBaseUrl": {
      "Type": "String"
    },
    "merakiBaseUrl": {
      "Type": "String"
    },
    "merakiNetworkId": {
      "Type": "String"
    },
    "merakiOrganizationId": {
      "Type": "String"
    },
    "storagedeviceName": {
      "Type": "String",
      "Default": "storagedeviceName"
    },
    "storagedeviceArn": {
      "Type": "String",
      "Default": "storagedeviceArn"
    },
    "storagedeviceStreamArn": {
      "Type": "String",
      "Default": "storagedeviceStreamArn"
    },
    "storageuserName": {
      "Type": "String",
      "Default": "storageuserName"
    },
    "storageuserArn": {
      "Type": "String",
      "Default": "storageuserArn"
    },
    "storageuserStreamArn": {
      "Type": "String",
      "Default": "storageuserStreamArn"
    },
    "functionserverlessguestwifimerakiArn": {
      "Type": "String",
      "Default": "functionserverlessguestwifimerakiArn"
    },
    "functionserverlessguestwifiwebexArn": {
      "Type": "String",
      "Default": "functionserverlessguestwifiwebexArn"
    }
  },
  "Conditions": {
    "ShouldNotCreateEnvResources": {
      "Fn::Equals": [
        {
          "Ref": "env"
        },
        "NONE"
      ]
    }
  },
  "Resources": {
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Metadata": {
        "aws:asset:path": "./src",
        "aws:asset:property": "Code"
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "deploymentBucketName"
          },
          "S3Key": {
            "Ref": "s3Key"
          }
        },
        "Handler": "index.handler",
        "FunctionName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "devices",
            {
              "Fn::Join": [
                "",
                [
                  "devices",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "Environment": {
          "Variables": {
            "ENV": {
              "Ref": "env"
            },
            "REGION": {
              "Ref": "AWS::Region"
            },
            "WEBEX_ACCESS_TOKEN": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Sub": [
                      "/amplify/${appId}/${env}/AMPLIFY_${functionName}_",
                      {
                        "appId": "d13k4u9m76sloy",
                        "env": {
                          "Ref": "env"
                        },
                        "functionName": "devices"
                      }
                    ]
                  },
                  "WEBEX_ACCESS_TOKEN"
                ]
              ]
            },
            "MERAKI_API_KEY": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Sub": [
                      "/amplify/${appId}/${env}/AMPLIFY_${functionName}_",
                      {
                        "appId": "d13k4u9m76sloy",
                        "env": {
                          "Ref": "env"
                        },
                        "functionName": "devices"
                      }
                    ]
                  },
                  "MERAKI_API_KEY"
                ]
              ]
            },
            "STORAGE_DEVICE_NAME": {
              "Ref": "storagedeviceName"
            },
            "STORAGE_DEVICE_ARN": {
              "Ref": "storagedeviceArn"
            },
            "STORAGE_DEVICE_STREAMARN": {
              "Ref": "storagedeviceStreamArn"
            },
            "STORAGE_USER_NAME": {
              "Ref": "storageuserName"
            },
            "STORAGE_USER_ARN": {
              "Ref": "storageuserArn"
            },
            "STORAGE_USER_STREAMARN": {
              "Ref": "storageuserStreamArn"
            },
            "WEBEX_BASE_URL": {
              "Ref": "webexBaseUrl"
            },
            "MERAKI_BASE_URL": {
              "Ref": "merakiBaseUrl"
            },
            "MERAKI_NETWORK_ID": {
              "Ref": "merakiNetworkId"
            },
            "MERAKI_ORGANIZATION_ID": {
              "Ref": "merakiOrganizationId"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaExecutionRole",
            "Arn"
          ]
        },
        "Runtime": "nodejs14.x",
        "Layers": [
          {
            "Ref": "functionserverlessguestwifimerakiArn"
          },
          {
            "Ref": "functionserverlessguestwifiwebexArn"
          }
        ],
        "Timeout": "25"
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "ShouldNotCreateEnvResources",
            "serverlessguestwifiLambdaRole7b148036",
            {
              "Fn::Join": [
                "",
                [
                  "serverlessguestwifiLambdaRole7b148036",
                  "-",
                  {
                    "Ref": "env"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        }
      }
    },
    "lambdaexecutionpolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": {
                "Fn::Sub": [
                  "arn:aws:logs:${region}:${account}:log-group:/aws/lambda/${lambda}:log-stream:*",
                  {
                    "region": {
                      "Ref": "AWS::Region"
                    },
                    "account": {
                      "Ref": "AWS::AccountId"
                    },
                    "lambda": {
                      "Ref": "LambdaFunction"
                    }
                  }
                ]
              }
            }
          ]
        }
      }
    },
    "AmplifyFunctionSecretsPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amplify-function-secrets-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "ssm:GetParameter",
                "ssm:GetParameters"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Fn::Sub": [
                        "/amplify/${appId}/${env}/AMPLIFY_${functionName}_",
                        {
                          "appId": "d13k4u9m76sloy",
                          "env": {
                            "Ref": "env"
                          },
                          "functionName": "devices"
                        }
                      ]
                    },
                    "*"
                  ]
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "LambdaExecutionRole"
      ]
    },
    "AmplifyResourcesPolicy": {
      "DependsOn": [
        "LambdaExecutionRole"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "amplify-lambda-execution-policy",
        "Roles": [
          {
            "Ref": "LambdaExecutionRole"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:Delete*"
              ],
              "Resource": [
                {
                  "Ref": "storagedeviceArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storagedeviceArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Put*",
                "dynamodb:Create*",
                "dynamodb:BatchWriteItem",
                "dynamodb:Get*",
                "dynamodb:BatchGetItem",
                "dynamodb:List*",
                "dynamodb:Describe*",
                "dynamodb:Scan",
                "dynamodb:Query"
              ],
              "Resource": [
                {
                  "Ref": "storageuserArn"
                },
                {
                  "Fn::Join": [
                    "/",
                    [
                      {
                        "Ref": "storageuserArn"
                      },
                      "index/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "Name": {
      "Value": {
        "Ref": "LambdaFunction"
      }
    },
    "Arn": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaFunction",
          "Arn"
        ]
      }
    },
    "Region": {
      "Value": {
        "Ref": "AWS::Region"
      }
    },
    "LambdaExecutionRole": {
      "Value": {
        "Ref": "LambdaExecutionRole"
      }
    }
  }
}